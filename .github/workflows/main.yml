on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master
name: "Build & Release"
jobs:
  build:
    name: Build & Release
    runs-on: windows-latest
    steps:
      # Checkout repository
      - uses: actions/checkout@v3

      # Setup Java environment
      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '22'

      # Setup Flutter
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          architecture: x64

      # Clean and prepare build environment
      - name: Clean Environment
        run: |
          flutter clean
          if (Test-Path "$env:USERPROFILE\.gradle\caches") { Remove-Item -Recurse -Force "$env:USERPROFILE\.gradle\caches" }
          if (Test-Path "$env:USERPROFILE\.gradle\daemon") { Remove-Item -Recurse -Force "$env:USERPROFILE\.gradle\daemon" }
          if (Test-Path "$env:USERPROFILE\.gradle\native") { Remove-Item -Recurse -Force "$env:USERPROFILE\.gradle\native" }
          if (Test-Path "$env:USERPROFILE\.gradle\wrapper") { Remove-Item -Recurse -Force "$env:USERPROFILE\.gradle\wrapper" }
          if (Test-Path ".\packages\flutter_tools\gradle\build") { Remove-Item -Recurse -Force ".\packages\flutter_tools\gradle\build" }

      # Fetch Flutter dependencies
      - name: Get Flutter Dependencies
        run: flutter pub get

      # Build Android (APK)
      - name: Build Android APK
        run: flutter build apk --debug --split-per-abi

      # Build Windows
      - name: Build Windows Executable
        run: flutter build windows --debug

      # Build Web
      - name: Build Web Application
        run: flutter build web --debug

      # Push to Debug
      - name: Push to Debug
        uses: ncipollo/release-action@v1
        with:
          artifacts: |
            build/app/outputs/apk/debug/*,
            build/windows/runner/Debug/*,
            build/web/*
          tag: v1.0.${{ github.run_number }}
          token: ${{ secrets.TOKEN }}